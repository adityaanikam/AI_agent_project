events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # CRM Service Mock (Port 8001)
    server {
        listen 8001;
        server_name localhost;
        
        location /crm {
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin *;
            return 200 '{"status": "success", "message": "CRM ticket created", "ticket_id": "CRM-$request_time", "mock": true}';
        }
        
        location / {
            return 404 '{"error": "CRM service endpoint not found"}';
        }
    }

    # Risk Alert Service Mock (Port 8002)
    server {
        listen 8002;
        server_name localhost;
        
        location /risk {
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin *;
            return 200 '{"status": "success", "message": "Risk alert logged", "alert_id": "RISK-$request_time", "mock": true}';
        }
        
        location / {
            return 404 '{"error": "Risk service endpoint not found"}';
        }
    }

    # Compliance Service Mock (Port 8003)
    server {
        listen 8003;
        server_name localhost;
        
        location /compliance {
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin *;
            return 200 '{"status": "success", "message": "Compliance check completed", "compliance_id": "COMP-$request_time", "mock": true}';
        }
        
        location / {
            return 404 '{"error": "Compliance service endpoint not found"}';
        }
    }

    # Notification Service Mock (Port 8004)
    server {
        listen 8004;
        server_name localhost;
        
        location /notify {
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin *;
            return 200 '{"status": "success", "message": "Notification sent", "notification_id": "NOTIF-$request_time", "mock": true}';
        }
        
        location / {
            return 404 '{"error": "Notification service endpoint not found"}';
        }
    }
} 